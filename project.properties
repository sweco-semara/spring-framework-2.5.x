# Ant and Maven properties for building the Spring Framework

# Values in this file will be overridden by any values with the same name
# in a user-created build.properties file in the same directory.

# Spring title
spring-title=Spring Framework

# Spring version
spring-version=2.5.6-sweco

# Project name
name=spring-framework

# Spring OSGi version, to be used in version information
# '-' is explicitly disallowed
spring-version-osgi=2.5.6.SWECO

# Compile with debug code
debug=on

# Library directory within project. Where third party jars reside.
lib.dir=${basedir}/lib

# Source directory under the current root
src.dir=${basedir}/src

# JDK 1.5 source directory under the current root
tiger.src.dir=${basedir}/tiger/src

# AspectJ source directory under the current root
aspectj.src.dir=${basedir}/aspectj/src

# Mock directory under the current root
mock.dir=${basedir}/mock

# Tiger mock directory under the current root
tiger.mock.dir=${basedir}/tiger/mock

# Test directory under the current root
test.dir=${basedir}/test

# JDK 1.5 test directory under the current root
tiger.test.dir=${basedir}/tiger/test

# AspectJ test directory under the current root
aspectj.test.dir=${basedir}/aspectj/test

# Directory for additional jar file content
jarcontent.dir=${basedir}/jarcontent

# Directory for generated API documentation
javadoc.dir=${basedir}/docs/api

# Directory for generated aspect API documentation
aj-javadoc.dir=${basedir}/docs/api-aspects

# HTTP settings for external Javadoc links
javadoc.proxyhost=
javadoc.proxyport=

# With the exception of 'dist' and 'docs/api', all artifacts produced by
# the build go somewhere underneath the target dir
target.dir=${basedir}/target

# Main source tree will be compiled into this directory tree
target.classes.dir=${target.dir}/classes

# Mock source tree will be compiled into this directory tree
target.mockclasses.dir=${target.dir}/mock-classes

# Test tree will be compiled into this directory tree
target.testclasses.dir=${target.dir}/test-classes

# Tiger test tree will be compiled into this directory tree
target.tigertestclasses.dir=${target.dir}/tiger-test-classes

# Sandbox directory under the current root
sandbox.dir=${basedir}/sandbox
sandbox.src.dir=${basedir}/sandbox/src
sandbox.test.dir=${basedir}/sandbox/test
sandbox.target.dir=${target.dir}/sandbox
sandbox.target.classes.dir=${sandbox.target.dir}/classes
sandbox.target.testclasses.dir=${sandbox.target.dir}/test-classes
sandbox.javadoc.dir=${basedir}/docs/sandbox/api

# Live database directory under the current root
livetest.dir=${basedir}/livetest

# Live database test tree will be compiled into this directory tree
target.livetestclasses.dir=${target.dir}/livetest-classes

# ------------------------------------------------------------------------------
# --- Testing
# ------------------------------------------------------------------------------

# Testing JARs
junit38.jar=${lib.dir}/junit/junit-3.8.2.jar
junit4.jar=${lib.dir}/junit/junit-4.4.jar
testng.jar=${lib.dir}/testng/testng-5.8-jdk15.jar

# Wildcards to be matched by JUnit and TestNG tests.
# Convention is that our JUnit and TestNG test classes have XXXTests-style names.
test.includes=**/*Tests.class
test.testng.includes=**/testng/**/*Tests.class

# Wildcards to exclude among JUnit tests.
test.excludes=**/Abstract* **/testng/** **/*TestNG*
test.testng.excludes=**/Abstract*

# Directory where JUnit test reports are written
target.junit.reports.dir=${target.dir}/test-reports
sandbox.target.junit.reports.dir=${sandbox.target.dir}/test-reports

# Directory where TestNG test reports are written
target.testng.reports.dir=${target.dir}/testng-reports

# Directory where JUnit test summary is written
target.junit.summary.dir=${target.dir}/test-summary
sandbox.target.junit.summary.dir=${sandbox.target.dir}/test-summary

# ------------------------------------------------------------------------------

# Where we generate instrumented (Cloverised) classes
target.clover.dir=${target.dir}/clover
clover.dbdir=${target.clover.dir}
clover.dbfile=spring_coverage.db
clover.initstring=${clover.dbdir}/${clover.dbfile}
target.clover.html.dir=docs/clover

# Global property to exclude selected classes from Clover instrumentation.
# Typically we'll use this to exclude experimental packages from coverage
# analysis, or classes that are intended to support development.
clover.excludes=

# Directory we generate distribution units such as jars and zips to
dist.dir=dist

# Directory for release Zips
target.release.dir=${target.dir}/release

# Zip file that gets created for a release
release.zip=spring-framework-${spring-version}.zip
release-with-docs.zip=spring-framework-${spring-version}-with-docs.zip
release-with-dependencies.zip=spring-framework-${spring-version}-with-dependencies.zip

# Path prefix within the Zip file
release.path=spring-framework-${spring-version}

# This is only used by the ant build to kill this directory, where IDEs may
# place other class files (for samples, etc.)
target.otherclasses.dir=${target.dir}/other-classes

# Directory for Jakarta Commons Attributes to write generated Java code to
commons.attributes.tempdir.src=${target.dir}/generated-commons-attributes-src
commons.attributes.tempdir.test=${target.dir}/generated-commons-attributes-test
commons.attributes.tempdir.sandbox.test=${target.dir}/generated-commons-attributes-sandbox.test


# docbook reference documentation
doc.dir=docs
doc.ref.dir=docs/reference
dist.ref.dir=docs/reference
# default to the single-sided pagination style
double.sided=0

# docbook MVC step-by-step guide
doc.mvcstep.dir=docs/MVC-step-by-step
dist.mvcstep.dir=docs/MVC-step-by-step

# Maven POM Dir
pom.src.dir=${basedir}/maven

# OSGI properties
# asm library breaks compatibility between versions
tx-version=1.0.1
aopalliance-version-osgi=1.0
hb-version=3.1

spring-bundle-prefix=org.springframework.bundle.spring

bundlor.mf.dir=${basedir}/osgi/bundlor/
